#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SWA.CRM.D365.Entities.Base
{
	
	
	/// <summary>
	/// Saved query against the database.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("savedquery")]
	public partial class SavedQuery : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the savedquery entity
		/// </summary>
		public partial class Fields
		{
			public const string AdvancedGroupBy = "advancedgroupby";
			public const string CanBeDeleted = "canbedeleted";
			public const string ColumnSetXml = "columnsetxml";
			public const string ComponentState = "componentstate";
			public const string ConditionalFormatting = "conditionalformatting";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string FetchXml = "fetchxml";
			public const string IntroducedVersion = "introducedversion";
			public const string IsCustom = "iscustom";
			public const string IsCustomizable = "iscustomizable";
			public const string IsCustomizableName = "iscustomizablename";
			public const string IsDefault = "isdefault";
			public const string IsDefaultName = "isdefaultname";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string IsPrivate = "isprivate";
			public const string IsQuickFindQuery = "isquickfindquery";
			public const string IsQuickFindQueryName = "isquickfindqueryname";
			public const string IsUserDefined = "isuserdefined";
			public const string IsUserDefinedName = "isuserdefinedname";
			public const string LayoutJson = "layoutjson";
			public const string LayoutXml = "layoutxml";
			public const string lk_savedquery_createdonbehalfby = "lk_savedquery_createdonbehalfby";
			public const string lk_savedquery_modifiedonbehalfby = "lk_savedquery_modifiedonbehalfby";
			public const string lk_savedquerybase_createdby = "lk_savedquerybase_createdby";
			public const string lk_savedquerybase_modifiedby = "lk_savedquerybase_modifiedby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OfflineSqlQuery = "offlinesqlquery";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OrganizationTabOrder = "organizationtaborder";
			public const string OverwriteTime = "overwritetime";
			public const string QueryAPI = "queryapi";
			public const string QueryAppUsage = "queryappusage";
			public const string QueryType = "querytype";
			public const string ReturnedTypeCode = "returnedtypecode";
			public const string SavedQueryId = "savedqueryid";
			public const string Id = "savedqueryid";
			public const string SavedQueryIdUnique = "savedqueryidunique";
			public const string SolutionId = "solutionid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string VersionNumber = "versionnumber";
		}
		
		
		public SavedQuery(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		
		public SavedQuery(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		
		public SavedQuery(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		
		public SavedQuery() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "savedqueryid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntitySchemaName = "SavedQuery";
		
		public const string EntityLogicalName = "savedquery";
		
		public const string EntityLogicalCollectionName = "savedqueries";
		
		public const string EntitySetName = "savedqueries";
		
		public const int EntityTypeCode = 1039;
		
		/// <summary>
		/// Type the column name that will be used to group the results from the data collected across multiple records from a system view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("advancedgroupby")]
		public string AdvancedGroupBy
		{
			
			get
			{
				return this.GetAttributeValue<string>("advancedgroupby");
			}
			
			set
			{
				this.SetAttributeValue("advancedgroupby", value);
			}
		}
		
		/// <summary>
		/// Tells whether the view can be deleted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canbedeleted")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty CanBeDeleted
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("canbedeleted");
			}
			
			set
			{
				this.SetAttributeValue("canbedeleted", value);
			}
		}
		
		/// <summary>
		/// Contains the columns and sorting criteria for the view, stored in XML format.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnsetxml")]
		public string ColumnSetXml
		{
			
			get
			{
				return this.GetAttributeValue<string>("columnsetxml");
			}
			
			set
			{
				this.SetAttributeValue("columnsetxml", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual ComponentState? ComponentState
		{
			
			get
			{
				return ((ComponentState?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Type information about how the items in the system view are formatted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conditionalformatting")]
		public string ConditionalFormatting
		{
			
			get
			{
				return this.GetAttributeValue<string>("conditionalformatting");
			}
			
			set
			{
				this.SetAttributeValue("conditionalformatting", value);
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type additional information to describe the view, such as the filter criteria or intended results set.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// String specifying the query in Fetch XML language.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fetchxml")]
		public string FetchXml
		{
			
			get
			{
				return this.GetAttributeValue<string>("fetchxml");
			}
			
			set
			{
				this.SetAttributeValue("fetchxml", value);
			}
		}
		
		/// <summary>
		/// Version in which the form is introduced.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		/// <summary>
		/// Tells whether a user created the view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustom")]
		public System.Nullable<bool> IsCustom
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscustom");
			}
		}
		
		/// <summary>
		/// Tells whether the component can be customized.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizablename")]
		public string IsCustomizableName
		{
			
			get
			{
				if (this.FormattedValues.Contains("iscustomizable"))
				{
					return this.FormattedValues["iscustomizable"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tells whether the view is the default view for the specified record type (entity).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefault")]
		public System.Nullable<bool> IsDefault
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdefault");
			}
			
			set
			{
				this.SetAttributeValue("isdefault", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefaultname")]
		public string IsDefaultName
		{
			
			get
			{
				if (this.FormattedValues.Contains("isdefault"))
				{
					return this.FormattedValues["isdefault"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tells whether the record is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indicates whether or not this is viewable by the entire organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivate")]
		[System.ObsoleteAttribute()]
		public System.Nullable<bool> IsPrivate
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isprivate");
			}
		}
		
		/// <summary>
		/// Choose whether the view is compatible with Quick Find. When users search for specific items, you define the fields that are searched in.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isquickfindquery")]
		public System.Nullable<bool> IsQuickFindQuery
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isquickfindquery");
			}
			
			set
			{
				this.SetAttributeValue("isquickfindquery", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isquickfindqueryname")]
		public string IsQuickFindQueryName
		{
			
			get
			{
				if (this.FormattedValues.Contains("isquickfindquery"))
				{
					return this.FormattedValues["isquickfindquery"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tells whether the view was created by a user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isuserdefined")]
		public System.Nullable<bool> IsUserDefined
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isuserdefined");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isuserdefinedname")]
		public string IsUserDefinedName
		{
			
			get
			{
				if (this.FormattedValues.Contains("isuserdefined"))
				{
					return this.FormattedValues["isuserdefined"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Layout data in JSON format.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("layoutjson")]
		public string LayoutJson
		{
			
			get
			{
				return this.GetAttributeValue<string>("layoutjson");
			}
			
			set
			{
				this.SetAttributeValue("layoutjson", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("layoutxml")]
		public string LayoutXml
		{
			
			get
			{
				return this.GetAttributeValue<string>("layoutxml");
			}
			
			set
			{
				this.SetAttributeValue("layoutxml", value);
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type a name for the view to describe what results the view will contain. This name is visible to users in the View list.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// String specifying the corresponding sql query for the fetch xml specified for offline use.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("offlinesqlquery")]
		public string OfflineSqlQuery
		{
			
			get
			{
				return this.GetAttributeValue<string>("offlinesqlquery");
			}
			
			set
			{
				this.SetAttributeValue("offlinesqlquery", value);
			}
		}
		
		/// <summary>
		/// Choose the ID of the organization that the record is associated with.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
		public string OrganizationIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("organizationid"))
				{
					return this.FormattedValues["organizationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For the organization, type the tab order to determine how users navigate through the screen using only the Tab key.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationtaborder")]
		public System.Nullable<int> OrganizationTabOrder
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("organizationtaborder");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queryapi")]
		public string QueryAPI
		{
			
			get
			{
				return this.GetAttributeValue<string>("queryapi");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queryappusage")]
		public System.Nullable<int> QueryAppUsage
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("queryappusage");
			}
			
			set
			{
				this.SetAttributeValue("queryappusage", value);
			}
		}
		
		/// <summary>
		/// Shows the type of the query.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("querytype")]
		public System.Nullable<int> QueryType
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("querytype");
			}
			
			set
			{
				this.SetAttributeValue("querytype", value);
			}
		}
		
		/// <summary>
		/// Type of entity displayed in the view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("returnedtypecode")]
		public string ReturnedTypeCode
		{
			
			get
			{
				return this.GetAttributeValue<string>("returnedtypecode");
			}
			
			set
			{
				this.SetAttributeValue("returnedtypecode", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("savedqueryid")]
		public System.Nullable<System.Guid> SavedQueryId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("savedqueryid");
			}
			
			set
			{
				this.SetAttributeValue("savedqueryid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("savedqueryid")]
		public override System.Guid Id
		{
			
			get
			{
				return base.Id;
			}
			
			set
			{
				this.SavedQueryId = value;
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("savedqueryidunique")]
		public System.Nullable<System.Guid> SavedQueryIdUnique
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("savedqueryidunique");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Shows the status of the view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual savedquery_statecode? StateCode
		{
			
			get
			{
				return ((savedquery_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the reason code that explains the status of the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual SavedQuery_StatusCode? StatusCode
		{
			
			get
			{
				return ((SavedQuery_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Version number of the view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 lk_savedquery_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_savedquery_createdonbehalfby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_savedquery_createdonbehalfby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_savedquery_createdonbehalfby", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_savedquery_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_savedquery_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_savedquery_modifiedonbehalfby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_savedquery_modifiedonbehalfby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_savedquery_modifiedonbehalfby", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_savedquery_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_savedquerybase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_savedquerybase_createdby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_savedquerybase_createdby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_savedquerybase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_savedquerybase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_savedquerybase_modifiedby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_savedquerybase_modifiedby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_savedquerybase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		
		public SavedQuery(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["savedqueryid"] = base.Id;
                        break;
                    case "savedqueryid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
