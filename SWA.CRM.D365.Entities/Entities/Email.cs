#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SWA.CRM.D365.Entities.Base
{
	
	
	/// <summary>
	/// Activity that is delivered using email protocols.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("email")]
	public partial class Email : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the email entity
		/// </summary>
		public partial class Fields
		{
			public const string Account_Email_EmailSender = "Account_Email_EmailSender";
			public const string Account_Email_SendersAccount = "Account_Email_SendersAccount";
			public const string Account_Emails = "Account_Emails";
			public const string activity_pointer_email = "activity_pointer_email";
			public const string ActivityAdditionalParams = "activityadditionalparams";
			public const string ActivityId = "activityid";
			public const string Id = "activityid";
			public const string ActivityTypeCode = "activitytypecode";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string AttachmentCount = "attachmentcount";
			public const string AttachmentOpenCount = "attachmentopencount";
			public const string BaseConversationIndexHash = "baseconversationindexhash";
			public const string Bcc = "bcc";
			public const string business_unit_email_activities = "business_unit_email_activities";
			public const string Category = "category";
			public const string Cc = "cc";
			public const string Compressed = "compressed";
			public const string CompressedName = "compressedname";
			public const string Contact_Email_EmailSender = "Contact_Email_EmailSender";
			public const string Contact_Emails = "Contact_Emails";
			public const string ConversationIndex = "conversationindex";
			public const string ConversationTrackingId = "conversationtrackingid";
			public const string CorrelatedActivityId = "correlatedactivityid";
			public const string CorrelatedActivityIdName = "correlatedactivityidname";
			public const string CorrelationMethod = "correlationmethod";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DelayedEmailSendTime = "delayedemailsendtime";
			public const string DeliveryAttempts = "deliveryattempts";
			public const string DeliveryPriorityCode = "deliveryprioritycode";
			public const string DeliveryPriorityCodeName = "deliveryprioritycodename";
			public const string DeliveryReceiptRequested = "deliveryreceiptrequested";
			public const string DeliveryReceiptRequestedName = "deliveryreceiptrequestedname";
			public const string Description = "description";
			public const string DirectionCode = "directioncode";
			public const string DirectionCodeName = "directioncodename";
			public const string email_activity_parties = "email_activity_parties";
			public const string email_activitymonitor = "email_activitymonitor";
			public const string Email_Annotation = "Email_Annotation";
			public const string Referencingemail_email_CorrelatedActivityId = "email_email_CorrelatedActivityId";
			public const string Referencingemail_email_parentactivityid = "email_email_parentactivityid";
			public const string Email_EmailTemplate = "Email_EmailTemplate";
			public const string EmailReminderExpiryTime = "emailreminderexpirytime";
			public const string EmailReminderStatus = "emailreminderstatus";
			public const string EmailReminderStatusName = "emailreminderstatusname";
			public const string EmailReminderText = "emailremindertext";
			public const string EmailReminderType = "emailremindertype";
			public const string EmailReminderTypeName = "emailremindertypename";
			public const string EmailSender = "emailsender";
			public const string EmailSenderName = "emailsendername";
			public const string EmailSenderYomiName = "emailsenderyominame";
			public const string EmailTrackingId = "emailtrackingid";
			public const string ExchangeRate = "exchangerate";
			public const string FollowEmailUserPreference = "followemailuserpreference";
			public const string FollowEmailUserPreferenceName = "followemailuserpreferencename";
			public const string From = "from";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Incident_Emails = "Incident_Emails";
			public const string InReplyTo = "inreplyto";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsEmailFollowed = "isemailfollowed";
			public const string IsEmailFollowedName = "isemailfollowedname";
			public const string IsEmailReminderSet = "isemailreminderset";
			public const string IsEmailReminderSetName = "isemailremindersetname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsUnsafe = "isunsafe";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string LastOpenedTime = "lastopenedtime";
			public const string LinksClickedCount = "linksclickedcount";
			public const string lk_email_createdby = "lk_email_createdby";
			public const string lk_email_createdonbehalfby = "lk_email_createdonbehalfby";
			public const string lk_email_modifiedby = "lk_email_modifiedby";
			public const string lk_email_modifiedonbehalfby = "lk_email_modifiedonbehalfby";
			public const string MessageId = "messageid";
			public const string MessageIdDupCheck = "messageiddupcheck";
			public const string MimeType = "mimetype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Notifications = "notifications";
			public const string NotificationsName = "notificationsname";
			public const string OnHoldTime = "onholdtime";
			public const string OpenCount = "opencount";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string owner_emails = "owner_emails";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentActivityId = "parentactivityid";
			public const string ParentActivityIdName = "parentactivityidname";
			public const string PostponeEmailProcessingUntil = "postponeemailprocessinguntil";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string ProcessId = "processid";
			public const string ReadReceiptRequested = "readreceiptrequested";
			public const string ReadReceiptRequestedName = "readreceiptrequestedname";
			public const string Referencedemail_email_CorrelatedActivityId = "Referencedemail_email_CorrelatedActivityId";
			public const string Referencedemail_email_parentactivityid = "Referencedemail_email_parentactivityid";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string ReminderActionCardId = "reminderactioncardid";
			public const string ReplyCount = "replycount";
			public const string ReservedForInternalUse = "reservedforinternaluse";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string Sender = "sender";
			public const string SenderMailboxId = "sendermailboxid";
			public const string SenderMailboxIdName = "sendermailboxidname";
			public const string SendersAccount = "sendersaccount";
			public const string SendersAccountName = "sendersaccountname";
			public const string SendersAccountYomiName = "sendersaccountyominame";
			public const string SentOn = "senton";
			public const string ServiceId = "serviceid";
			public const string ServiceIdName = "serviceidname";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SLAInvokedIdName = "slainvokedidname";
			public const string SLAName = "slaname";
			public const string SortDate = "sortdate";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubmittedBy = "submittedby";
			public const string SystemUser_Email_EmailSender = "SystemUser_Email_EmailSender";
			public const string team_email = "team_email";
			public const string TemplateId = "templateid";
			public const string TemplateIdName = "templateidname";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string To = "to";
			public const string ToRecipients = "torecipients";
			public const string TrackingToken = "trackingtoken";
			public const string TransactionCurrency_Email = "TransactionCurrency_Email";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string user_email = "user_email";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		
		
		public Email(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		
		public Email(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		
		public Email(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		
		public Email() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "activityid";
		
		public const string PrimaryNameAttribute = "subject";
		
		public const string EntitySchemaName = "Email";
		
		public const string EntityLogicalName = "email";
		
		public const string EntityLogicalCollectionName = "emails";
		
		public const string EntitySetName = "emails";
		
		public const int EntityTypeCode = 4202;
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityadditionalparams")]
		public string ActivityAdditionalParams
		{
			
			get
			{
				return this.GetAttributeValue<string>("activityadditionalparams");
			}
			
			set
			{
				this.SetAttributeValue("activityadditionalparams", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the email activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			
			set
			{
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			
			get
			{
				return base.Id;
			}
			
			set
			{
				this.ActivityId = value;
			}
		}
		
		/// <summary>
		/// Shows the type of activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string ActivityTypeCode
		{
			
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecodename")]
		public string ActivityTypeCodeName
		{
			
			get
			{
				if (this.FormattedValues.Contains("activitytypecode"))
				{
					return this.FormattedValues["activitytypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type the number of minutes spent creating and sending the email. The duration is used in reporting.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
		public System.Nullable<int> ActualDurationMinutes
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
			}
			
			set
			{
				this.SetAttributeValue("actualdurationminutes", value);
			}
		}
		
		/// <summary>
		/// Enter the actual end date and time of the email. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
		public System.Nullable<System.DateTime> ActualEnd
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
			}
			
			set
			{
				this.SetAttributeValue("actualend", value);
			}
		}
		
		/// <summary>
		/// Enter the actual start date and time for the email. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
		public System.Nullable<System.DateTime> ActualStart
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
			}
			
			set
			{
				this.SetAttributeValue("actualstart", value);
			}
		}
		
		/// <summary>
		/// Shows the umber of attachments of the email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("attachmentcount")]
		public System.Nullable<int> AttachmentCount
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("attachmentcount");
			}
		}
		
		/// <summary>
		/// Shows the number of times an email attachment has been viewed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("attachmentopencount")]
		public System.Nullable<int> AttachmentOpenCount
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("attachmentopencount");
			}
			
			set
			{
				this.SetAttributeValue("attachmentopencount", value);
			}
		}
		
		/// <summary>
		/// Hash of base of conversation index.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("baseconversationindexhash")]
		public System.Nullable<int> BaseConversationIndexHash
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("baseconversationindexhash");
			}
			
			set
			{
				this.SetAttributeValue("baseconversationindexhash", value);
			}
		}
		
		/// <summary>
		/// Enter the recipients that are included on the email distribution, but are not displayed to other recipients.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bcc")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.ActivityParty> Bcc
		{
			
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("bcc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, SWA.CRM.D365.Entities.Base.ActivityParty>(collection.Entities, e => e.ToEntity<SWA.CRM.D365.Entities.Base.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("bcc", value);
				}
				else
				{
					this.SetAttributeValue("bcc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Type a category to identify the email type, such as lead outreach, customer follow-up, or service alert, to tie the email to a business group or function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public string Category
		{
			
			get
			{
				return this.GetAttributeValue<string>("category");
			}
			
			set
			{
				this.SetAttributeValue("category", value);
			}
		}
		
		/// <summary>
		/// Enter the recipients that should be copied on the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.ActivityParty> Cc
		{
			
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("cc");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, SWA.CRM.D365.Entities.Base.ActivityParty>(collection.Entities, e => e.ToEntity<SWA.CRM.D365.Entities.Base.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("cc", value);
				}
				else
				{
					this.SetAttributeValue("cc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Indicates if the body is compressed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("compressed")]
		public System.Nullable<bool> Compressed
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("compressed");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("compressedname")]
		public string CompressedName
		{
			
			get
			{
				if (this.FormattedValues.Contains("compressed"))
				{
					return this.FormattedValues["compressed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Identifier for all the email responses for this conversation.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conversationindex")]
		public string ConversationIndex
		{
			
			get
			{
				return this.GetAttributeValue<string>("conversationindex");
			}
		}
		
		/// <summary>
		/// Conversation Tracking Id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conversationtrackingid")]
		public System.Nullable<System.Guid> ConversationTrackingId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("conversationtrackingid");
			}
			
			set
			{
				this.SetAttributeValue("conversationtrackingid", value);
			}
		}
		
		/// <summary>
		/// Correlated Activity Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedactivityid")]
		public Microsoft.Xrm.Sdk.EntityReference CorrelatedActivityId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("correlatedactivityid");
			}
			
			set
			{
				this.SetAttributeValue("correlatedactivityid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedactivityidname")]
		public string CorrelatedActivityIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("correlatedactivityid"))
				{
					return this.FormattedValues["correlatedactivityid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows how an email is matched to an existing email in Microsoft Dynamics 365. For system use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlationmethod")]
		public virtual Email_CorrelationMethod? CorrelationMethod
		{
			
			get
			{
				return ((Email_CorrelationMethod?)(EntityOptionSetEnum.GetEnum(this, "correlationmethod")));
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enter the expected date and time when email will be sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("delayedemailsendtime")]
		public System.Nullable<System.DateTime> DelayedEmailSendTime
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("delayedemailsendtime");
			}
			
			set
			{
				this.SetAttributeValue("delayedemailsendtime", value);
			}
		}
		
		/// <summary>
		/// Shows the count of the number of attempts made to send the email. The count is used as an indicator of email routing issues.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryattempts")]
		public System.Nullable<int> DeliveryAttempts
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("deliveryattempts");
			}
			
			set
			{
				this.SetAttributeValue("deliveryattempts", value);
			}
		}
		
		/// <summary>
		/// Select the priority of delivery of the email to the email server.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycode")]
		public virtual activitypointer_DeliveryPriorityCode? DeliveryPriorityCode
		{
			
			get
			{
				return ((activitypointer_DeliveryPriorityCode?)(EntityOptionSetEnum.GetEnum(this, "deliveryprioritycode")));
			}
			
			set
			{
				this.SetAttributeValue("deliveryprioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycodename")]
		public string DeliveryPriorityCodeName
		{
			
			get
			{
				if (this.FormattedValues.Contains("deliveryprioritycode"))
				{
					return this.FormattedValues["deliveryprioritycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select whether the sender should receive confirmation that the email was delivered.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryreceiptrequested")]
		public System.Nullable<bool> DeliveryReceiptRequested
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("deliveryreceiptrequested");
			}
			
			set
			{
				this.SetAttributeValue("deliveryreceiptrequested", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryreceiptrequestedname")]
		public string DeliveryReceiptRequestedName
		{
			
			get
			{
				if (this.FormattedValues.Contains("deliveryreceiptrequested"))
				{
					return this.FormattedValues["deliveryreceiptrequested"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type the greeting and message text of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Select the direction of the email as incoming or outbound.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("directioncode")]
		public System.Nullable<bool> DirectionCode
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("directioncode");
			}
			
			set
			{
				this.SetAttributeValue("directioncode", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("directioncodename")]
		public string DirectionCodeName
		{
			
			get
			{
				if (this.FormattedValues.Contains("directioncode"))
				{
					return this.FormattedValues["directioncode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time when an email reminder expires.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailreminderexpirytime")]
		public System.Nullable<System.DateTime> EmailReminderExpiryTime
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("emailreminderexpirytime");
			}
			
			set
			{
				this.SetAttributeValue("emailreminderexpirytime", value);
			}
		}
		
		/// <summary>
		/// Shows the status of the email reminder.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailreminderstatus")]
		public virtual Email_EmailReminderStatus? EmailReminderStatus
		{
			
			get
			{
				return ((Email_EmailReminderStatus?)(EntityOptionSetEnum.GetEnum(this, "emailreminderstatus")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailreminderstatusname")]
		public string EmailReminderStatusName
		{
			
			get
			{
				if (this.FormattedValues.Contains("emailreminderstatus"))
				{
					return this.FormattedValues["emailreminderstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailremindertext")]
		public string EmailReminderText
		{
			
			get
			{
				return this.GetAttributeValue<string>("emailremindertext");
			}
			
			set
			{
				this.SetAttributeValue("emailremindertext", value);
			}
		}
		
		/// <summary>
		/// Shows the type of the email reminder.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailremindertype")]
		public virtual Email_EmailReminderType? EmailReminderType
		{
			
			get
			{
				return ((Email_EmailReminderType?)(EntityOptionSetEnum.GetEnum(this, "emailremindertype")));
			}
			
			set
			{
				this.SetAttributeValue("emailremindertype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailremindertypename")]
		public string EmailReminderTypeName
		{
			
			get
			{
				if (this.FormattedValues.Contains("emailremindertype"))
				{
					return this.FormattedValues["emailremindertype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the sender of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
		public Microsoft.Xrm.Sdk.EntityReference EmailSender
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("emailsender");
			}
		}
		
		/// <summary>
		/// Shows the name of the sender of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsendername")]
		public string EmailSenderName
		{
			
			get
			{
				if (this.FormattedValues.Contains("emailsender"))
				{
					return this.FormattedValues["emailsender"];
				}
				else
				{
					return default(string);
				}
			}
			
			set
			{
				this.SetAttributeValue("emailsendername", value);
			}
		}
		
		/// <summary>
		/// Shows the yomi name of the email sender
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsenderyominame")]
		public string EmailSenderYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("emailsender"))
				{
					return this.FormattedValues["emailsender"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Email Tracking Id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailtrackingid")]
		public System.Nullable<System.Guid> EmailTrackingId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("emailtrackingid");
			}
			
			set
			{
				this.SetAttributeValue("emailtrackingid", value);
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Select whether the email allows following recipient activities sent from Microsoft Dynamics 365.This is user preference state which can be overridden by system evaluated state.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemailuserpreference")]
		public System.Nullable<bool> FollowEmailUserPreference
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("followemailuserpreference");
			}
			
			set
			{
				this.SetAttributeValue("followemailuserpreference", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followemailuserpreferencename")]
		public string FollowEmailUserPreferenceName
		{
			
			get
			{
				if (this.FormattedValues.Contains("followemailuserpreference"))
				{
					return this.FormattedValues["followemailuserpreference"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Enter the sender of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("from")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.ActivityParty> From
		{
			
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("from");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, SWA.CRM.D365.Entities.Base.ActivityParty>(collection.Entities, e => e.ToEntity<SWA.CRM.D365.Entities.Base.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("from", value);
				}
				else
				{
					this.SetAttributeValue("from", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Type the ID of the email message that this email activity is a response to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("inreplyto")]
		public string InReplyTo
		{
			
			get
			{
				return this.GetAttributeValue<string>("inreplyto");
			}
		}
		
		/// <summary>
		/// Information regarding whether the email activity was billed as part of resolving a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> IsBilled
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
			
			set
			{
				this.SetAttributeValue("isbilled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilledname")]
		public string IsBilledName
		{
			
			get
			{
				if (this.FormattedValues.Contains("isbilled"))
				{
					return this.FormattedValues["isbilled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only. Shows whether this email is followed. This is evaluated state which overrides user selection of follow email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailfollowed")]
		public System.Nullable<bool> IsEmailFollowed
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isemailfollowed");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailfollowedname")]
		public string IsEmailFollowedName
		{
			
			get
			{
				if (this.FormattedValues.Contains("isemailfollowed"))
				{
					return this.FormattedValues["isemailfollowed"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only. Shows whether this email Reminder is Set.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailreminderset")]
		public System.Nullable<bool> IsEmailReminderSet
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isemailreminderset");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailremindersetname")]
		public string IsEmailReminderSetName
		{
			
			get
			{
				if (this.FormattedValues.Contains("isemailreminderset"))
				{
					return this.FormattedValues["isemailreminderset"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Information regarding whether the activity is a regular activity type or event type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> IsRegularActivity
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivityname")]
		public string IsRegularActivityName
		{
			
			get
			{
				if (this.FormattedValues.Contains("isregularactivity"))
				{
					return this.FormattedValues["isregularactivity"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isunsafe")]
		public System.Nullable<int> IsUnsafe
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("isunsafe");
			}
		}
		
		/// <summary>
		/// Indication if the email was created by a workflow rule.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> IsWorkflowCreated
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
			
			set
			{
				this.SetAttributeValue("isworkflowcreated", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreatedname")]
		public string IsWorkflowCreatedName
		{
			
			get
			{
				if (this.FormattedValues.Contains("isworkflowcreated"))
				{
					return this.FormattedValues["isworkflowcreated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Contains the date and time stamp of the last on hold time.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Shows the latest date and time when email was opened.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastopenedtime")]
		public System.Nullable<System.DateTime> LastOpenedTime
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastopenedtime");
			}
			
			set
			{
				this.SetAttributeValue("lastopenedtime", value);
			}
		}
		
		/// <summary>
		/// Shows the number of times a link in an email has been clicked.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("linksclickedcount")]
		public System.Nullable<int> LinksClickedCount
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("linksclickedcount");
			}
			
			set
			{
				this.SetAttributeValue("linksclickedcount", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the email message. Used only for email that is received.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messageid")]
		public string MessageId
		{
			
			get
			{
				return this.GetAttributeValue<string>("messageid");
			}
			
			set
			{
				this.SetAttributeValue("messageid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messageiddupcheck")]
		[System.ObsoleteAttribute()]
		public System.Nullable<System.Guid> MessageIdDupCheck
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("messageiddupcheck");
			}
			
			set
			{
				this.SetAttributeValue("messageiddupcheck", value);
			}
		}
		
		/// <summary>
		/// MIME type of the email message data.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mimetype")]
		public string MimeType
		{
			
			get
			{
				return this.GetAttributeValue<string>("mimetype");
			}
			
			set
			{
				this.SetAttributeValue("mimetype", value);
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the notification code to identify issues with the email recipients or attachments, such as blocked attachments.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("notifications")]
		public virtual Email_Notifications? Notifications
		{
			
			get
			{
				return ((Email_Notifications?)(EntityOptionSetEnum.GetEnum(this, "notifications")));
			}
			
			set
			{
				this.SetAttributeValue("notifications", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("notificationsname")]
		public string NotificationsName
		{
			
			get
			{
				if (this.FormattedValues.Contains("notifications"))
				{
					return this.FormattedValues["notifications"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows how long, in minutes, that the record was on hold.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Shows the number of times an email has been opened.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("opencount")]
		public System.Nullable<int> OpenCount
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("opencount");
			}
			
			set
			{
				this.SetAttributeValue("opencount", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the email activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the email activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the email activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Select the activity that the email is associated with.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentactivityid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentActivityId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentactivityid");
			}
			
			set
			{
				this.SetAttributeValue("parentactivityid", value);
			}
		}
		
		/// <summary>
		/// Parent Activity Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentactivityidname")]
		public string ParentActivityIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("parentactivityid"))
				{
					return this.FormattedValues["parentactivityid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeemailprocessinguntil")]
		public System.Nullable<System.DateTime> PostponeEmailProcessingUntil
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeemailprocessinguntil");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual Email_PriorityCode? PriorityCode
		{
			
			get
			{
				return ((Email_PriorityCode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			
			set
			{
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycodename")]
		public string PriorityCodeName
		{
			
			get
			{
				if (this.FormattedValues.Contains("prioritycode"))
				{
					return this.FormattedValues["prioritycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Indicates that a read receipt is requested.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("readreceiptrequested")]
		public System.Nullable<bool> ReadReceiptRequested
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("readreceiptrequested");
			}
			
			set
			{
				this.SetAttributeValue("readreceiptrequested", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("readreceiptrequestedname")]
		public string ReadReceiptRequestedName
		{
			
			get
			{
				if (this.FormattedValues.Contains("readreceiptrequested"))
				{
					return this.FormattedValues["readreceiptrequested"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the record that the email relates to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			
			set
			{
				this.SetAttributeValue("regardingobjectid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidname")]
		public string RegardingObjectIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidyominame")]
		public string RegardingObjectIdYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reminder Action Card Id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reminderactioncardid")]
		public System.Nullable<System.Guid> ReminderActionCardId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("reminderactioncardid");
			}
			
			set
			{
				this.SetAttributeValue("reminderactioncardid", value);
			}
		}
		
		/// <summary>
		/// Shows the number of replies received for an email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("replycount")]
		public System.Nullable<int> ReplyCount
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("replycount");
			}
		}
		
		/// <summary>
		/// For internal use only
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reservedforinternaluse")]
		public string ReservedForInternalUse
		{
			
			get
			{
				return this.GetAttributeValue<string>("reservedforinternaluse");
			}
			
			set
			{
				this.SetAttributeValue("reservedforinternaluse", value);
			}
		}
		
		/// <summary>
		/// Scheduled duration of the email activity, specified in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
		public System.Nullable<int> ScheduledDurationMinutes
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
			}
		}
		
		/// <summary>
		/// Enter the expected due date and time for the activity to be completed to provide details about when the email will be sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
			
			set
			{
				this.SetAttributeValue("scheduledend", value);
			}
		}
		
		/// <summary>
		/// Enter the expected start date and time for the activity to provide details about the tentative time when the email activity must be initiated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
			
			set
			{
				this.SetAttributeValue("scheduledstart", value);
			}
		}
		
		/// <summary>
		/// Sender of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sender")]
		public string Sender
		{
			
			get
			{
				return this.GetAttributeValue<string>("sender");
			}
			
			set
			{
				this.SetAttributeValue("sender", value);
			}
		}
		
		/// <summary>
		/// Select the mailbox associated with the sender of the email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
		public Microsoft.Xrm.Sdk.EntityReference SenderMailboxId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendermailboxid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxidname")]
		public string SenderMailboxIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("sendermailboxid"))
				{
					return this.FormattedValues["sendermailboxid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the parent account of the sender of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccount")]
		public Microsoft.Xrm.Sdk.EntityReference SendersAccount
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendersaccount");
			}
		}
		
		/// <summary>
		/// Shows the name of the sender account of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccountname")]
		public string SendersAccountName
		{
			
			get
			{
				if (this.FormattedValues.Contains("sendersaccount"))
				{
					return this.FormattedValues["sendersaccount"];
				}
				else
				{
					return default(string);
				}
			}
			
			set
			{
				this.SetAttributeValue("sendersaccountname", value);
			}
		}
		
		/// <summary>
		/// Shows the name of the sender account yomi name 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccountyominame")]
		public string SendersAccountYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("sendersaccount"))
				{
					return this.FormattedValues["sendersaccount"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time that the email was sent.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("senton")]
		public System.Nullable<System.DateTime> SentOn
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("senton");
			}
		}
		
		/// <summary>
		/// Unique identifier for the associated service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
			}
			
			set
			{
				this.SetAttributeValue("serviceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceidname")]
		public string ServiceIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("serviceid"))
				{
					return this.FormattedValues["serviceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Choose the service level agreement (SLA) that you want to apply to the email record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Last SLA that was applied to this email. This field is for internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
		public string SLAInvokedIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("slainvokedid"))
				{
					return this.FormattedValues["slainvokedid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
		public string SLAName
		{
			
			get
			{
				if (this.FormattedValues.Contains("slaid"))
				{
					return this.FormattedValues["slaid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the date and time by which the activities are sorted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
		public System.Nullable<System.DateTime> SortDate
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
			}
			
			set
			{
				this.SetAttributeValue("sortdate", value);
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Shows whether the email is open, completed, or canceled. Completed and canceled email is read-only and can't be edited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual email_statecode? StateCode
		{
			
			get
			{
				return ((email_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Select the email's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Email_StatusCode? StatusCode
		{
			
			get
			{
				return ((Email_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Type a subcategory to identify the email type and relate the activity to a specific product, sales region, business group, or other function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
		public string Subcategory
		{
			
			get
			{
				return this.GetAttributeValue<string>("subcategory");
			}
			
			set
			{
				this.SetAttributeValue("subcategory", value);
			}
		}
		
		/// <summary>
		/// Type a short description about the objective or primary topic of the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			
			set
			{
				this.SetAttributeValue("subject", value);
			}
		}
		
		/// <summary>
		/// Shows the Microsoft Office Outlook account for the user who submitted the email to Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("submittedby")]
		public string SubmittedBy
		{
			
			get
			{
				return this.GetAttributeValue<string>("submittedby");
			}
			
			set
			{
				this.SetAttributeValue("submittedby", value);
			}
		}
		
		/// <summary>
		/// For internal use only. ID for template used in email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("templateid")]
		public Microsoft.Xrm.Sdk.EntityReference TemplateId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("templateid");
			}
			
			set
			{
				this.SetAttributeValue("templateid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("templateidname")]
		public string TemplateIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("templateid"))
				{
					return this.FormattedValues["templateid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Enter the account, contact, lead, queue, or user recipients for the email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("to")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.ActivityParty> To
		{
			
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("to");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Select<Microsoft.Xrm.Sdk.Entity, SWA.CRM.D365.Entities.Base.ActivityParty>(collection.Entities, e => e.ToEntity<SWA.CRM.D365.Entities.Base.ActivityParty>());
				}
				else
				{
					return null;
				}
			}
			
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("to", value);
				}
				else
				{
					this.SetAttributeValue("to", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Shows the email addresses corresponding to the recipients.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("torecipients")]
		public string ToRecipients
		{
			
			get
			{
				return this.GetAttributeValue<string>("torecipients");
			}
			
			set
			{
				this.SetAttributeValue("torecipients", value);
			}
		}
		
		/// <summary>
		/// Shows the tracking token assigned to the email to make sure responses are automatically tracked in Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trackingtoken")]
		public string TrackingToken
		{
			
			get
			{
				return this.GetAttributeValue<string>("trackingtoken");
			}
			
			set
			{
				this.SetAttributeValue("trackingtoken", value);
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version number of the email message.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N email_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_activity_parties")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.ActivityParty> email_activity_parties
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.ActivityParty>("email_activity_parties", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.ActivityParty>("email_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// 1:N email_activitymonitor
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_activitymonitor")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.activitymonitor> email_activitymonitor
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.activitymonitor>("email_activitymonitor", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.activitymonitor>("email_activitymonitor", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Email_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Email_Annotation")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Annotation> Email_Annotation
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Annotation>("Email_Annotation", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Annotation>("Email_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N email_email_CorrelatedActivityId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Email> Referencedemail_email_CorrelatedActivityId
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N email_email_parentactivityid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Email> Referencedemail_email_parentactivityid
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// N:1 Account_Email_EmailSender
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_EmailSender")]
		public SWA.CRM.D365.Entities.Base.Account Account_Email_EmailSender
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Account>("Account_Email_EmailSender", null);
			}
		}
		
		/// <summary>
		/// N:1 Account_Email_SendersAccount
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendersaccount")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Email_SendersAccount")]
		public SWA.CRM.D365.Entities.Base.Account Account_Email_SendersAccount
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Account>("Account_Email_SendersAccount", null);
			}
		}
		
		/// <summary>
		/// N:1 Account_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Emails")]
		public SWA.CRM.D365.Entities.Base.Account Account_Emails
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Account>("Account_Emails", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.Account>("Account_Emails", null, value);
			}
		}
		
		/// <summary>
		/// N:1 activity_pointer_email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_email")]
		public SWA.CRM.D365.Entities.Base.ActivityPointer activity_pointer_email
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.ActivityPointer>("activity_pointer_email", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.ActivityPointer>("activity_pointer_email", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_email_activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_email_activities")]
		public SWA.CRM.D365.Entities.Base.BusinessUnit business_unit_email_activities
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.BusinessUnit>("business_unit_email_activities", null);
			}
		}
		
		/// <summary>
		/// N:1 Contact_Email_EmailSender
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Email_EmailSender")]
		public SWA.CRM.D365.Entities.Base.Contact Contact_Email_EmailSender
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Contact>("Contact_Email_EmailSender", null);
			}
		}
		
		/// <summary>
		/// N:1 Contact_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Emails")]
		public SWA.CRM.D365.Entities.Base.Contact Contact_Emails
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Contact>("Contact_Emails", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.Contact>("Contact_Emails", null, value);
			}
		}
		
		/// <summary>
		/// N:1 email_email_CorrelatedActivityId
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("correlatedactivityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public SWA.CRM.D365.Entities.Base.Email Referencingemail_email_CorrelatedActivityId
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.Email>("email_email_CorrelatedActivityId", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 email_email_parentactivityid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentactivityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public SWA.CRM.D365.Entities.Base.Email Referencingemail_email_parentactivityid
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.Email>("email_email_parentactivityid", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 Email_EmailTemplate
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("templateid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Email_EmailTemplate")]
		public SWA.CRM.D365.Entities.Base.Template Email_EmailTemplate
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Template>("Email_EmailTemplate", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.Template>("Email_EmailTemplate", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Incident_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Emails")]
		public SWA.CRM.D365.Entities.Base.Incident Incident_Emails
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Incident>("Incident_Emails", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.Incident>("Incident_Emails", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_email_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_email_createdby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_email_createdby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_email_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_email_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_email_createdonbehalfby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_email_createdonbehalfby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_email_createdonbehalfby", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_email_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_email_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_email_modifiedby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_email_modifiedby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_email_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_email_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_email_modifiedonbehalfby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_email_modifiedonbehalfby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_email_modifiedonbehalfby", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_email_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 owner_emails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_emails")]
		public SWA.CRM.D365.Entities.Base.Owner owner_emails
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Owner>("owner_emails", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.Owner>("owner_emails", null, value);
			}
		}
		
		/// <summary>
		/// N:1 SystemUser_Email_EmailSender
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailsender")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SystemUser_Email_EmailSender")]
		public SWA.CRM.D365.Entities.Base.SystemUser SystemUser_Email_EmailSender
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("SystemUser_Email_EmailSender", null);
			}
		}
		
		/// <summary>
		/// N:1 team_email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_email")]
		public SWA.CRM.D365.Entities.Base.Team team_email
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Team>("team_email", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_Email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Email")]
		public SWA.CRM.D365.Entities.Base.TransactionCurrency TransactionCurrency_Email
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.TransactionCurrency>("TransactionCurrency_Email", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.TransactionCurrency>("TransactionCurrency_Email", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_email")]
		public SWA.CRM.D365.Entities.Base.SystemUser user_email
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("user_email", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		
		public Email(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["activityid"] = base.Id;
                        break;
                    case "activityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
