#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SWA.CRM.D365.Entities.Base
{
	
	
	/// <summary>
	/// Metadata of knowledge base (KB) articles associated with Microsoft Dynamics 365 entities.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("knowledgebaserecord")]
	public partial class KnowledgeBaseRecord : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the knowledgebaserecord entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string KnowledgeBaseRecord_ActivityPointers = "KnowledgeBaseRecord_ActivityPointers";
			public const string KnowledgeBaseRecord_Annotations = "KnowledgeBaseRecord_Annotations";
			public const string KnowledgeBaseRecord_Appointments = "KnowledgeBaseRecord_Appointments";
			public const string KnowledgeBaseRecord_Emails = "KnowledgeBaseRecord_Emails";
			public const string KnowledgeBaseRecord_Faxes = "KnowledgeBaseRecord_Faxes";
			public const string KnowledgeBaseRecord_Incident = "KnowledgeBaseRecord_Incident";
			public const string knowledgebaserecord_IncidentResolutions = "knowledgebaserecord_IncidentResolutions";
			public const string KnowledgeBaseRecord_Letters = "KnowledgeBaseRecord_Letters";
			public const string KnowledgeBaseRecord_PhoneCalls = "KnowledgeBaseRecord_PhoneCalls";
			public const string KnowledgeBaseRecord_ServiceAppointments = "KnowledgeBaseRecord_ServiceAppointments";
			public const string knowledgebaserecord_swa_smses = "knowledgebaserecord_swa_smses";
			public const string KnowledgeBaseRecord_Tasks = "KnowledgeBaseRecord_Tasks";
			public const string KnowledgeBaseRecordId = "knowledgebaserecordid";
			public const string Id = "knowledgebaserecordid";
			public const string lk_KnowledgeBaseRecord_createdby = "lk_KnowledgeBaseRecord_createdby";
			public const string lk_KnowledgeBaseRecord_createdonbehalfby = "lk_KnowledgeBaseRecord_createdonbehalfby";
			public const string lk_KnowledgeBaseRecord_modifiedby = "lk_KnowledgeBaseRecord_modifiedby";
			public const string lk_KnowledgeBaseRecord_modifiedonbehalfby = "lk_KnowledgeBaseRecord_modifiedonbehalfby";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string organization_KnowledgeBaseRecord = "organization_KnowledgeBaseRecord";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string PrivateUrl = "privateurl";
			public const string PublicUrl = "publicurl";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string TransactionCurrency_KnowledgeBaseRecord = "TransactionCurrency_KnowledgeBaseRecord";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UniqueId = "uniqueid";
			public const string VersionNumber = "versionnumber";
		}
		
		
		public KnowledgeBaseRecord(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		
		public KnowledgeBaseRecord(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		
		public KnowledgeBaseRecord(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		
		public KnowledgeBaseRecord() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "knowledgebaserecordid";
		
		public const string PrimaryNameAttribute = "title";
		
		public const string EntitySchemaName = "KnowledgeBaseRecord";
		
		public const string EntityLogicalName = "knowledgebaserecord";
		
		public const string EntityLogicalCollectionName = "knowledgebaserecords";
		
		public const string EntitySetName = "knowledgebaserecords";
		
		public const int EntityTypeCode = 9930;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			
			set
			{
				this.SetAttributeValue("createdonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the knowledge base record with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// This field will be used to store the Unique ID of the associated Knowledge Base records
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("knowledgebaserecordid")]
		public System.Nullable<System.Guid> KnowledgeBaseRecordId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("knowledgebaserecordid");
			}
			
			set
			{
				this.SetAttributeValue("knowledgebaserecordid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("knowledgebaserecordid")]
		public override System.Guid Id
		{
			
			get
			{
				return base.Id;
			}
			
			set
			{
				this.KnowledgeBaseRecordId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			
			set
			{
				this.SetAttributeValue("modifiedonbehalfby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
		public string OrganizationIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("organizationid"))
				{
					return this.FormattedValues["organizationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the internal Parature service desk URL of the knowledge base records.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privateurl")]
		public string PrivateUrl
		{
			
			get
			{
				return this.GetAttributeValue<string>("privateurl");
			}
			
			set
			{
				this.SetAttributeValue("privateurl", value);
			}
		}
		
		/// <summary>
		/// Shows the public Parature portal URL of the knowledge base records.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publicurl")]
		public string PublicUrl
		{
			
			get
			{
				return this.GetAttributeValue<string>("publicurl");
			}
			
			set
			{
				this.SetAttributeValue("publicurl", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Shows the title of the knowledge base (KB) Record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			
			set
			{
				this.SetAttributeValue("title", value);
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the Knowledge Base Record with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Shows the unique ID of the linked knowledge base (KB) article.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uniqueid")]
		public string UniqueId
		{
			
			get
			{
				return this.GetAttributeValue<string>("uniqueid");
			}
			
			set
			{
				this.SetAttributeValue("uniqueid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N KnowledgeBaseRecord_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.ActivityPointer> KnowledgeBaseRecord_ActivityPointers
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.ActivityPointer>("KnowledgeBaseRecord_ActivityPointers", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.ActivityPointer>("KnowledgeBaseRecord_ActivityPointers", null, value);
			}
		}
		
		/// <summary>
		/// 1:N KnowledgeBaseRecord_Annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Annotations")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Annotation> KnowledgeBaseRecord_Annotations
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Annotation>("KnowledgeBaseRecord_Annotations", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Annotation>("KnowledgeBaseRecord_Annotations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N KnowledgeBaseRecord_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Appointments")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Appointment> KnowledgeBaseRecord_Appointments
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Appointment>("KnowledgeBaseRecord_Appointments", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Appointment>("KnowledgeBaseRecord_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// 1:N KnowledgeBaseRecord_Emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Emails")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Email> KnowledgeBaseRecord_Emails
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("KnowledgeBaseRecord_Emails", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("KnowledgeBaseRecord_Emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N KnowledgeBaseRecord_Faxes
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Faxes")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Fax> KnowledgeBaseRecord_Faxes
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Fax>("KnowledgeBaseRecord_Faxes", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Fax>("KnowledgeBaseRecord_Faxes", null, value);
			}
		}
		
		/// <summary>
		/// 1:N knowledgebaserecord_IncidentResolutions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("knowledgebaserecord_IncidentResolutions")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.IncidentResolution> knowledgebaserecord_IncidentResolutions
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.IncidentResolution>("knowledgebaserecord_IncidentResolutions", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.IncidentResolution>("knowledgebaserecord_IncidentResolutions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N KnowledgeBaseRecord_Letters
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Letters")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Letter> KnowledgeBaseRecord_Letters
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Letter>("KnowledgeBaseRecord_Letters", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Letter>("KnowledgeBaseRecord_Letters", null, value);
			}
		}
		
		/// <summary>
		/// 1:N KnowledgeBaseRecord_PhoneCalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_PhoneCalls")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.PhoneCall> KnowledgeBaseRecord_PhoneCalls
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.PhoneCall>("KnowledgeBaseRecord_PhoneCalls", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.PhoneCall>("KnowledgeBaseRecord_PhoneCalls", null, value);
			}
		}
		
		/// <summary>
		/// 1:N KnowledgeBaseRecord_ServiceAppointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_ServiceAppointments")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.ServiceAppointment> KnowledgeBaseRecord_ServiceAppointments
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.ServiceAppointment>("KnowledgeBaseRecord_ServiceAppointments", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.ServiceAppointment>("KnowledgeBaseRecord_ServiceAppointments", null, value);
			}
		}
		
		/// <summary>
		/// 1:N knowledgebaserecord_swa_smses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("knowledgebaserecord_swa_smses")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.swa_sms> knowledgebaserecord_swa_smses
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.swa_sms>("knowledgebaserecord_swa_smses", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.swa_sms>("knowledgebaserecord_swa_smses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N KnowledgeBaseRecord_Tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Tasks")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Task> KnowledgeBaseRecord_Tasks
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Task>("KnowledgeBaseRecord_Tasks", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Task>("KnowledgeBaseRecord_Tasks", null, value);
			}
		}
		
		/// <summary>
		/// N:N KnowledgeBaseRecord_Incident
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Incident")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Incident> KnowledgeBaseRecord_Incident
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Incident>("KnowledgeBaseRecord_Incident", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Incident>("KnowledgeBaseRecord_Incident", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_KnowledgeBaseRecord_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_KnowledgeBaseRecord_createdby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_KnowledgeBaseRecord_createdby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_KnowledgeBaseRecord_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_KnowledgeBaseRecord_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_KnowledgeBaseRecord_createdonbehalfby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_KnowledgeBaseRecord_createdonbehalfby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_KnowledgeBaseRecord_createdonbehalfby", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_KnowledgeBaseRecord_createdonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_KnowledgeBaseRecord_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_KnowledgeBaseRecord_modifiedby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_KnowledgeBaseRecord_modifiedby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_KnowledgeBaseRecord_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_KnowledgeBaseRecord_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_KnowledgeBaseRecord_modifiedonbehalfby")]
		public SWA.CRM.D365.Entities.Base.SystemUser lk_KnowledgeBaseRecord_modifiedonbehalfby
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_KnowledgeBaseRecord_modifiedonbehalfby", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.SystemUser>("lk_KnowledgeBaseRecord_modifiedonbehalfby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 organization_KnowledgeBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_KnowledgeBaseRecord")]
		public SWA.CRM.D365.Entities.Base.Organization organization_KnowledgeBaseRecord
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.Organization>("organization_KnowledgeBaseRecord", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_KnowledgeBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_KnowledgeBaseRecord")]
		public SWA.CRM.D365.Entities.Base.TransactionCurrency TransactionCurrency_KnowledgeBaseRecord
		{
			
			get
			{
				return this.GetRelatedEntity<SWA.CRM.D365.Entities.Base.TransactionCurrency>("TransactionCurrency_KnowledgeBaseRecord", null);
			}
			
			set
			{
				this.SetRelatedEntity<SWA.CRM.D365.Entities.Base.TransactionCurrency>("TransactionCurrency_KnowledgeBaseRecord", null, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		
		public KnowledgeBaseRecord(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["knowledgebaserecordid"] = base.Id;
                        break;
                    case "knowledgebaserecordid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
