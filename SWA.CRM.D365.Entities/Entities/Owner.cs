#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SWA.CRM.D365.Entities.Base
{
	
	
	/// <summary>
	/// Group of undeleted system users and undeleted teams. Owners can be used to control access to specific objects.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("owner")]
	public partial class Owner : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the owner entity
		/// </summary>
		public partial class Fields
		{
			public const string incidentresolution_owner_ownerid = "incidentresolution_owner_ownerid";
			public const string Name = "name";
			public const string owner_accounts = "owner_accounts";
			public const string owner_activitymonitor = "owner_activitymonitor";
			public const string owner_activitypointers = "owner_activitypointers";
			public const string owner_annotations = "owner_annotations";
			public const string owner_appointments = "owner_appointments";
			public const string owner_contacts = "owner_contacts";
			public const string owner_emails = "owner_emails";
			public const string owner_incidents = "owner_incidents";
			public const string owner_letters = "owner_letters";
			public const string owner_phonecalls = "owner_phonecalls";
			public const string owner_tasks = "owner_tasks";
			public const string owner_templates = "owner_templates";
			public const string owner_userentityuisettings = "owner_userentityuisettings";
			public const string owner_userform = "owner_userform";
			public const string owner_userqueryvisualizations = "owner_userqueryvisualizations";
			public const string OwnerId = "ownerid";
			public const string Id = "ownerid";
			public const string OwnerIdType = "owneridtype";
			public const string swa_sms_owner_ownerid = "swa_sms_owner_ownerid";
			public const string VersionNumber = "versionnumber";
			public const string YomiName = "yominame";
		}
		
		
		public Owner(System.Guid id) : 
				base(EntityLogicalName, id)
		{
		}
		
		
		public Owner(string keyName, object keyValue) : 
				base(EntityLogicalName, keyName, keyValue)
		{
		}
		
		
		public Owner(Microsoft.Xrm.Sdk.KeyAttributeCollection keyAttributes) : 
				base(EntityLogicalName, keyAttributes)
		{
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		
		public Owner() : 
				base(EntityLogicalName)
		{
		}
		
		public const string PrimaryIdAttribute = "ownerid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntitySchemaName = "Owner";
		
		public const string EntityLogicalName = "owner";
		
		public const string EntityLogicalCollectionName = "owners";
		
		public const string EntitySetName = "owners";
		
		public const int EntityTypeCode = 7;
		
		/// <summary>
		/// Name of the Owner.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			
			get
			{
				return this.GetAttributeValue<string>("name");
			}
		}
		
		/// <summary>
		/// Unique identifier for the Owner: systemuserid or teamid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public System.Nullable<System.Guid> OwnerId
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ownerid");
			}
			
			set
			{
				this.SetAttributeValue("ownerid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public override System.Guid Id
		{
			
			get
			{
				return base.Id;
			}
			
			set
			{
				this.OwnerId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridtype")]
		public string OwnerIdType
		{
			
			get
			{
				return this.GetAttributeValue<string>("owneridtype");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Pronunciation of the name of the owner, written in phonetic hiragana or katakana characters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yominame")]
		public string YomiName
		{
			
			get
			{
				return this.GetAttributeValue<string>("yominame");
			}
		}
		
		/// <summary>
		/// 1:N incidentresolution_owner_ownerid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incidentresolution_owner_ownerid")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.IncidentResolution> incidentresolution_owner_ownerid
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.IncidentResolution>("incidentresolution_owner_ownerid", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.IncidentResolution>("incidentresolution_owner_ownerid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_accounts")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Account> owner_accounts
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Account>("owner_accounts", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Account>("owner_accounts", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_activitymonitor
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_activitymonitor")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.activitymonitor> owner_activitymonitor
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.activitymonitor>("owner_activitymonitor", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.activitymonitor>("owner_activitymonitor", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_activitypointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_activitypointers")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.ActivityPointer> owner_activitypointers
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.ActivityPointer>("owner_activitypointers", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.ActivityPointer>("owner_activitypointers", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_annotations")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Annotation> owner_annotations
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Annotation>("owner_annotations", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Annotation>("owner_annotations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_appointments")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Appointment> owner_appointments
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Appointment>("owner_appointments", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Appointment>("owner_appointments", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_contacts")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Contact> owner_contacts
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Contact>("owner_contacts", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Contact>("owner_contacts", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_emails")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Email> owner_emails
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("owner_emails", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("owner_emails", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_incidents
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_incidents")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Incident> owner_incidents
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Incident>("owner_incidents", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Incident>("owner_incidents", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_letters
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_letters")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Letter> owner_letters
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Letter>("owner_letters", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Letter>("owner_letters", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_phonecalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_phonecalls")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.PhoneCall> owner_phonecalls
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.PhoneCall>("owner_phonecalls", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.PhoneCall>("owner_phonecalls", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_tasks")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Task> owner_tasks
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Task>("owner_tasks", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Task>("owner_tasks", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_templates
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_templates")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Template> owner_templates
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Template>("owner_templates", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Template>("owner_templates", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_userentityuisettings
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_userentityuisettings")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.UserEntityUISettings> owner_userentityuisettings
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.UserEntityUISettings>("owner_userentityuisettings", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.UserEntityUISettings>("owner_userentityuisettings", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_userform
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_userform")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.UserForm> owner_userform
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.UserForm>("owner_userform", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.UserForm>("owner_userform", null, value);
			}
		}
		
		/// <summary>
		/// 1:N owner_userqueryvisualizations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_userqueryvisualizations")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.UserQueryVisualization> owner_userqueryvisualizations
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.UserQueryVisualization>("owner_userqueryvisualizations", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.UserQueryVisualization>("owner_userqueryvisualizations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N swa_sms_owner_ownerid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("swa_sms_owner_ownerid")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.swa_sms> swa_sms_owner_ownerid
		{
			
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.swa_sms>("swa_sms_owner_ownerid", null);
			}
			
			set
			{
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.swa_sms>("swa_sms_owner_ownerid", null, value);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		
		public Owner(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (value != null && name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ownerid"] = base.Id;
                        break;
                    case "ownerid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}
#pragma warning restore CS1591
