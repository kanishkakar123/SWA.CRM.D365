//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace SWA.CRM.D365.Entities.Base
{
	
	/// <summary>
	/// Group of undeleted system users and undeleted teams. Owners can be used to control access to specific objects.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("owner")]
	public partial class Owner : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Owner() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "owner";
		
		public const string EntitySchemaName = "Owner";
		
		public const string PrimaryIdAttribute = "ownerid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntityLogicalCollectionName = "owners";
		
		public const string EntitySetName = "owners";
		
		public const int EntityTypeCode = 7;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Name of the Owner.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
		}
		
		/// <summary>
		/// Unique identifier for the Owner: systemuserid or teamid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public System.Nullable<System.Guid> OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OwnerId = value;
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridtype")]
		public string OwnerIdType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("owneridtype");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Pronunciation of the name of the owner, written in phonetic hiragana or katakana characters.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("yominame")]
		public string YomiName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("yominame");
			}
		}
		
		/// <summary>
		/// 1:N incidentresolution_owner_ownerid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incidentresolution_owner_ownerid")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.IncidentResolution> incidentresolution_owner_ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.IncidentResolution>("incidentresolution_owner_ownerid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("incidentresolution_owner_ownerid");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.IncidentResolution>("incidentresolution_owner_ownerid", null, value);
				this.OnPropertyChanged("incidentresolution_owner_ownerid");
			}
		}
		
		/// <summary>
		/// 1:N owner_accounts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_accounts")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Account> owner_accounts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Account>("owner_accounts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_accounts");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Account>("owner_accounts", null, value);
				this.OnPropertyChanged("owner_accounts");
			}
		}
		
		/// <summary>
		/// 1:N owner_activitypointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_activitypointers")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.ActivityPointer> owner_activitypointers
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.ActivityPointer>("owner_activitypointers", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_activitypointers");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.ActivityPointer>("owner_activitypointers", null, value);
				this.OnPropertyChanged("owner_activitypointers");
			}
		}
		
		/// <summary>
		/// 1:N owner_annotations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_annotations")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Annotation> owner_annotations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Annotation>("owner_annotations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_annotations");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Annotation>("owner_annotations", null, value);
				this.OnPropertyChanged("owner_annotations");
			}
		}
		
		/// <summary>
		/// 1:N owner_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_appointments")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Appointment> owner_appointments
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Appointment>("owner_appointments", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_appointments");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Appointment>("owner_appointments", null, value);
				this.OnPropertyChanged("owner_appointments");
			}
		}
		
		/// <summary>
		/// 1:N owner_businessprocess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_businessprocess")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.businessprocess> owner_businessprocess
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.businessprocess>("owner_businessprocess", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_businessprocess");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.businessprocess>("owner_businessprocess", null, value);
				this.OnPropertyChanged("owner_businessprocess");
			}
		}
		
		/// <summary>
		/// 1:N owner_contacts
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_contacts")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Contact> owner_contacts
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Contact>("owner_contacts", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_contacts");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Contact>("owner_contacts", null, value);
				this.OnPropertyChanged("owner_contacts");
			}
		}
		
		/// <summary>
		/// 1:N owner_emails
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_emails")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Email> owner_emails
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("owner_emails", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_emails");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Email>("owner_emails", null, value);
				this.OnPropertyChanged("owner_emails");
			}
		}
		
		/// <summary>
		/// 1:N owner_incidents
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_incidents")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Incident> owner_incidents
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Incident>("owner_incidents", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_incidents");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Incident>("owner_incidents", null, value);
				this.OnPropertyChanged("owner_incidents");
			}
		}
		
		/// <summary>
		/// 1:N owner_knowledgearticle
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_knowledgearticle")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.KnowledgeArticle> owner_knowledgearticle
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.KnowledgeArticle>("owner_knowledgearticle", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_knowledgearticle");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.KnowledgeArticle>("owner_knowledgearticle", null, value);
				this.OnPropertyChanged("owner_knowledgearticle");
			}
		}
		
		/// <summary>
		/// 1:N owner_listoperation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_listoperation")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.listoperation> owner_listoperation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.listoperation>("owner_listoperation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_listoperation");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.listoperation>("owner_listoperation", null, value);
				this.OnPropertyChanged("owner_listoperation");
			}
		}
		
		/// <summary>
		/// 1:N owner_msdyn_slakpi
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_msdyn_slakpi")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.msdyn_slakpi> owner_msdyn_slakpi
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.msdyn_slakpi>("owner_msdyn_slakpi", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_msdyn_slakpi");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.msdyn_slakpi>("owner_msdyn_slakpi", null, value);
				this.OnPropertyChanged("owner_msdyn_slakpi");
			}
		}
		
		/// <summary>
		/// 1:N owner_opportunitys
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_opportunitys")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Opportunity> owner_opportunitys
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Opportunity>("owner_opportunitys", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_opportunitys");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Opportunity>("owner_opportunitys", null, value);
				this.OnPropertyChanged("owner_opportunitys");
			}
		}
		
		/// <summary>
		/// 1:N owner_phonecalls
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_phonecalls")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.PhoneCall> owner_phonecalls
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.PhoneCall>("owner_phonecalls", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_phonecalls");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.PhoneCall>("owner_phonecalls", null, value);
				this.OnPropertyChanged("owner_phonecalls");
			}
		}
		
		/// <summary>
		/// 1:N owner_queues
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_queues")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Queue> owner_queues
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Queue>("owner_queues", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_queues");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Queue>("owner_queues", null, value);
				this.OnPropertyChanged("owner_queues");
			}
		}
		
		/// <summary>
		/// 1:N owner_reports
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_reports")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Report> owner_reports
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Report>("owner_reports", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_reports");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Report>("owner_reports", null, value);
				this.OnPropertyChanged("owner_reports");
			}
		}
		
		/// <summary>
		/// 1:N owner_slas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_slas")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.SLA> owner_slas
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.SLA>("owner_slas", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_slas");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.SLA>("owner_slas", null, value);
				this.OnPropertyChanged("owner_slas");
			}
		}
		
		/// <summary>
		/// 1:N owner_tasks
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_tasks")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Task> owner_tasks
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Task>("owner_tasks", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_tasks");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Task>("owner_tasks", null, value);
				this.OnPropertyChanged("owner_tasks");
			}
		}
		
		/// <summary>
		/// 1:N owner_templates
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_templates")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.Template> owner_templates
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.Template>("owner_templates", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_templates");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.Template>("owner_templates", null, value);
				this.OnPropertyChanged("owner_templates");
			}
		}
		
		/// <summary>
		/// 1:N owner_userquerys
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_userquerys")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.UserQuery> owner_userquerys
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.UserQuery>("owner_userquerys", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_userquerys");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.UserQuery>("owner_userquerys", null, value);
				this.OnPropertyChanged("owner_userquerys");
			}
		}
		
		/// <summary>
		/// 1:N slakpiinstance_owner
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("slakpiinstance_owner")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.SLAKPIInstance> slakpiinstance_owner
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.SLAKPIInstance>("slakpiinstance_owner", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("slakpiinstance_owner");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.SLAKPIInstance>("slakpiinstance_owner", null, value);
				this.OnPropertyChanged("slakpiinstance_owner");
			}
		}
		
		/// <summary>
		/// 1:N swa_sms_owner_ownerid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("swa_sms_owner_ownerid")]
		public System.Collections.Generic.IEnumerable<SWA.CRM.D365.Entities.Base.swa_sms> swa_sms_owner_ownerid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<SWA.CRM.D365.Entities.Base.swa_sms>("swa_sms_owner_ownerid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("swa_sms_owner_ownerid");
				this.SetRelatedEntities<SWA.CRM.D365.Entities.Base.swa_sms>("swa_sms_owner_ownerid", null, value);
				this.OnPropertyChanged("swa_sms_owner_ownerid");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Owner(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ownerid"] = base.Id;
                        break;
                    case "ownerid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}